# Envnment variables**:
   ```bash
cp .env.example .env
```
   
   Edit `.env` and add your API keys:
   ```env
GEMINI_API_KEY=your_gemini_api_key_here
   OPENROUTER_API_KEY=your_openrouter_api_key_here
   PORT=3001
   NODE_ENV=development
   FRONTEND_URL=http://localhost:3000
```

4. **Start the development server**:
   ```bash
npm run dev
```

## üîå API Endpoints

### Base URL
```
http://localhost:3001/api
```

### Main Endpoints

#### Paraphrase Text
```http
POST /api/paraphrase
```

**Request Body:**
```json
{
  "text": "Your text to paraphrase",
  "mode": "standard",
  "language": "en-us",
  "synonymStrength": 50,
  "model": "normal"
}
```

**Response:**
```json
{
  "success": true,
  "data": {
    "originalText": "Your original text",
    "paraphrasedText": "The paraphrased version",
    "model": "Kimi K2 Free",
    "mode": "standard",
    "processingTime": 1250
  }
}
```

#### Health Check
```http
GET /api/health
```

#### Available Models
```http
GET /api/models
```

## ü§ñ AI Models

1. **Lite Model**: Google Gemini 2.0 Flash Experimental (OpenRouter - Free)
2. **Normal Model**: Kimi K2 (OpenRouter - Free)  
3. **Heavy Model**: Gemini 2.5 Flash (Direct Gemini API)
4. **Pro Model**: Gemini 2.5 Flash Pro (Direct Gemini API)

## üîÑ Paraphrasing Modes

- **Standard**: Basic rewriting with neutral tone
- **Fluency**: Improved flow and readability
- **Humanize**: Natural, human-like language
- **Formal**: Professional and business-appropriate
- **Academic**: Scholarly style with precise terminology
- **Simple**: Easy-to-understand language
- **Creative**: Artistic and engaging expressions
- **Expand**: Detailed elaboration with more context
- **Shorten**: Condensed while retaining meaning
- **Custom**: Advanced customization options

## üõ°Ô∏è Security Features

- **Rate Limiting**: 100 requests per 15 minutes per IP
- **Input Validation**: Comprehensive request validation
- **CORS Protection**: Configured for frontend domains
- **Security Headers**: Helmet middleware for HTTP headers

## üîß Development Scripts

```bash
npm run dev      # Development with hot reload
npm run build    # Build TypeScript to JavaScript
npm start        # Run production build
```ironment Variables for QuillCraft Backend

# Gemini API Configuration
GEMINI_API_KEY=your_gemini_api_key_here

# OpenRouter API Configuration  
OPENROUTER_API_KEY=your_openrouter_api_key_here

# Server Configuration
PORT=3001
NODE_ENV=development

# CORS Configuration (Frontend URL)
FRONTEND_URL=http://localhost:3000

# Rate Limiting
RATE_LIMIT_WINDOW_MS=900000
RATE_LIMIT_MAX_REQUESTS=100
